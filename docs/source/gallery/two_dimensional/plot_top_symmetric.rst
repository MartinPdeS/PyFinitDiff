
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/two_dimensional/plot_top_symmetric.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_two_dimensional_plot_top_symmetric.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_two_dimensional_plot_top_symmetric.py:


Example: eigenmodes 8
=====================

.. GENERATED FROM PYTHON SOURCE LINES 8-13

+-------------+------------+--------------+------------+------------+
| Boundaries  |    left    |     right    |    top     |   bottom   |
+=============+============+==============+============+============+
|      -      |    zero    |     zero     |    sym     |   zero     |
+-------------+------------+--------------+------------+------------+

.. GENERATED FROM PYTHON SOURCE LINES 13-67

.. code-block:: python3


    from scipy.sparse import linalg
    from MPSPlots.render2D import SceneList

    from PyFinitDiff.sparse2D import FiniteDifference2D
    from PyFinitDiff.utils import get_2D_circular_mesh_triplet
    from PyFinitDiff.boundaries import Boundaries2D


    n_x = 40
    n_y = 50

    sparse_instance = FiniteDifference2D(
        n_x=n_x,
        n_y=n_y,
        dx=100 / n_x,
        dy=100 / n_y,
        derivative=2,
        accuracy=2,
        boundaries=Boundaries2D(top='symmetric')
    )

    mesh_triplet = get_2D_circular_mesh_triplet(
        n_x=n_x,
        n_y=n_y,
        value_out=1.0,
        value_in=1.4444,
        x_offset=0,
        y_offset=+100,
        radius=70
    )

    dynamic_triplet = sparse_instance.triplet + mesh_triplet

    eigen_values, eigen_vectors = linalg.eigs(
        dynamic_triplet.to_scipy_sparse(),
        k=4,
        which='LM',
        sigma=1.4444
    )

    shape = [sparse_instance.n_y, sparse_instance.n_x]

    figure = SceneList(unit_size=(3, 3), tight_layout=True, ax_orientation='horizontal')

    for i in range(4):
        Vector = eigen_vectors[:, i].real.reshape(shape)
        ax = figure.append_ax(title=f'eigenvalues: \n{eigen_values[i]:.3f}')
        ax.add_mesh(scalar=Vector)

    figure.show()


    # -



.. image-sg:: /gallery/two_dimensional/images/sphx_glr_plot_top_symmetric_001.png
   :alt: , eigenvalues:  1.440+0.000j, eigenvalues:  1.433+0.000j, eigenvalues:  1.424+0.000j, eigenvalues:  1.421+0.000j
   :srcset: /gallery/two_dimensional/images/sphx_glr_plot_top_symmetric_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    SceneList(unit_size=(3, 3), tight_layout=True, transparent_background=False, title='', padding=1.0, ax_orientation='horizontal')




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.527 seconds)


.. _sphx_glr_download_gallery_two_dimensional_plot_top_symmetric.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_top_symmetric.py <plot_top_symmetric.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_top_symmetric.ipynb <plot_top_symmetric.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
